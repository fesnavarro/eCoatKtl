FUNCTION_BLOCK "fbArchiveParBoiler"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.8
   VAR DB_SPECIFIC
      dataParBoiler { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Array[0..50] of DWord;
      formatParBoiler { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} AT dataParBoiler : Array[0..1] of "tParameterBoiler";
   END_VAR

   VAR_TEMP 
      tempInt : Int;
   END_VAR


BEGIN
	"fSizeArray"(size => "dbParBoiler".ia.qty,
	             io_Array := "dbParBoiler".parBoiler);
	"dbParBoiler".firstRunning.setConfig := 0;
	"dbParBoiler".firstRunning.setDelayUp := 5000;
	"dbParBoiler".firstRunning.setDelayDown := 0;
	"dbParBoiler".firstRunning.setSignal := TRUE;
	"fStatus"("dbParBoiler".firstRunning);
	
	IF "dbParBoiler".firstRunning.getStatus THEN
	    REGION saveData
	        IF "dbParBoiler".ia.acc >= "dbParBoiler".ia.qty THEN
	            "dbParBoiler".ia.acc := 0;
	        END_IF;
	        "dbParBoiler".ia.acc += 1;
	        #formatParBoiler["dbParBoiler".ia.acc] :=
	        "dbParBoiler".parBoiler["dbParBoiler".ia.acc];
	    END_REGION
	ELSE
	    REGION retrieveData
	        FOR "dbParBoiler".ia.acc := 1 TO "dbParBoiler".ia.qty DO
	            "dbParBoiler".parBoiler["dbParBoiler".ia.acc] :=
	            #formatParBoiler["dbParBoiler".ia.acc];
	        END_FOR;
	    END_REGION
	END_IF;
END_FUNCTION_BLOCK

